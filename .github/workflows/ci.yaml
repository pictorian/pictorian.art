name: ci

on:
  push:
    branches:
      - "main"

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   services:
  #     database:
  #       image: mysql:8.0
  #       env:
  #         MYSQL_ROOT_PASSWORD: password
  #         MYSQL_DATABASE: database
  #       ports:
  #         - 3306:3306
  #   steps:
  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: "8.1"

  #     - name: Checkout source code
  #       uses: actions/checkout@v3

  #     - name: Install dependencies with Composer
  #       uses: ramsey/composer-install@v2

  #     - name: Execute database migrations
  #       run: bin/console doctrine:migrations:migrate --no-interaction

  #     - name: Run tests
  #       run: make check

  build:
    name: Build
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build and push the Docker image
      #   uses: docker/build-push-action@v3
      #   with:
      #     push: true
      #     tags: |
      #       ghcr.io/username/package:latest
      #       ghcr.io/username/package:${{ github.sha }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            slim777/pictorian:latest
            slim777/pictorian:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    # if: github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBERNETES_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: pictorian
          manifests: |
            k8s/deployment.yaml
            k8s/ingress.yaml
            k8s/service.yaml
          images: |
            slim777/pictorian:${{ github.sha }}
